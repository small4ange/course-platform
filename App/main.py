# App/main.py
from datetime import date
from dto.User import User
from dto.Platform import Platform
from dto.Address import Address
from context import set_current_user, get_current_user
from exceptions import InvalidDateError, PermissionDeniedError, CourseNotFoundError
from dto.course.CourseFactory import CourseFactory
from logging_config import setup_logging
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_file = setup_logging()
logger = logging.getLogger('main')


class EducationalPlatformDemo:
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.

    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:
    - –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏
    - –†–∞–±–æ—Ç—É —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
    - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    - –û–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    """

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å."""
        self.platform = None
        self.admin_user = User("admin_user", "admin", "admin@example.com")
        self.instructor_user = User("instructor_user", "instructor", "instructor@example.com")
        self.student_user = User("student_user", "student", "student@example.com")
        logger.info("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def demonstrate_platform_usage(self):
        """
        –û—Å–Ω–æ–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.

        –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:
        - –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –∫—É—Ä—Å–æ–≤
        - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
        - –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
        - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        - –û–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
        """
        logger.info("–ù–∞—á–∞–ª–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
        print("üéì –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–û–ô –ü–õ–ê–¢–§–û–†–ú–´")
        print("=" * 60)
        print(f"üìù –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª: {log_file}")
        print()

        self._create_platform()
        self._create_and_add_courses()
        self._manage_course_data()
        self._analyze_data()
        self._demonstrate_logging_notifications()
        # self._handle_exceptions()
        self._demonstrate_course_comparison()

        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        logger.info("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

    def _create_platform(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É."""
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
        print("\n1. –°–û–ó–î–ê–ù–ò–ï –ü–õ–ê–¢–§–û–†–ú–´")
        print("-" * 40)

        set_current_user(self.admin_user)
        platform_address = Address("edu-platform.com", "https://www.edu-platform.com")
        self.platform = Platform("–ú–æ—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞", platform_address)

        print(f"   ‚úÖ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∞: {self.platform}")
        logger.info(f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∞: {self.platform.name}")

    def _create_and_add_courses(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É."""
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤")
        print("\n2. –°–û–ó–î–ê–ù–ò–ï –ò –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–£–†–°–û–í (—á–µ—Ä–µ–∑ CourseFactory)")
        print("-" * 60)

        set_current_user(self.admin_user)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
        programming_course = CourseFactory.create_course(
            "programming",
            "Python Programming",
            date(2024, 1, 15),
            date(2024, 6, 15),
            "John Doe",
            ["student1", "student2", "student3", "student4"],
            ["Basic", "OOP", "Web", "Databases", "Testing"],
            languages=["Python", "SQL", "JavaScript"]
        )

        design_course = CourseFactory.create_course(
            "design",
            "Graphic Design",
            date(2024, 2, 1),
            date(2024, 7, 1),
            "Jane Smith",
            ["student5", "student6", "student7"],
            ["Color Theory", "Typography", "Layout", "Branding"],
            tools=["Photoshop", "Illustrator", "Figma", "InDesign"]
        )

        science_course = CourseFactory.create_course(
            "science",
            "Data Science",
            date(2024, 3, 1),
            date(2024, 8, 1),
            "Dr. Brown",
            ["student8", "student9"],
            ["Statistics", "Machine Learning", "Data Visualization", "Big Data"],
            field=["Data Science", "AI", "Machine Learning"]
        )

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
        self.platform.add_course(programming_course)
        self.platform.add_course(design_course)
        self.platform.add_course(science_course)

        print("   ‚úÖ –ö—É—Ä—Å—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:")
        for i, course in enumerate(self.platform.get_courses(), 1):
            print(f"      {i}. {course}")

        logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {len(self.platform.get_courses())} –∫—É—Ä—Å–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É")

    def _manage_course_data(self):
        """–£–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–º–∏ –∫—É—Ä—Å–æ–≤ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)."""
        logger.info("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∫—É—Ä—Å–æ–≤")
        print("\n3. –£–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–ú–ò –ö–£–†–°–û–í")
        print("-" * 40)

        set_current_user(self.admin_user)
        courses = self.platform.get_courses()

        if courses:
            # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞ —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä—ã
            programming_course = courses[0]

            print("   üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:")
            print(f"      –°—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {programming_course.title}")
            programming_course.title = "Advanced Python Programming"
            print(f"      –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {programming_course.title}")

            print(f"      –°—Ç–∞—Ä—ã–µ —Ç–µ–º—ã: {programming_course.topics}")
            programming_course.topics.append("Advanced Algorithms")
            print(f"      –ù–æ–≤—ã–µ —Ç–µ–º—ã: {programming_course.topics}")

    def _analyze_data(self):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã."""
        logger.info("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
        print("\n4. –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ü–õ–ê–¢–§–û–†–ú–´")
        print("-" * 40)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤
        print("   üìä –í—Å–µ –∫—É—Ä—Å—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:")
        all_courses = self.platform.get_courses()
        for i, course in enumerate(all_courses, 1):
            print(f"      {i}. {course.title} - {len(course.students)} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")

        # –ü–æ–∏—Å–∫ —Ç–æ–ø-N –∫—É—Ä—Å–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        if all_courses:
            print("\n   üèÜ –¢–æ–ø –∫—É—Ä—Å—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:")
            top_n = min(2, len(all_courses))
            top_courses = self.platform.get_top_courses(top_n)
            for i, course in enumerate(top_courses, 1):
                print(f"      {i}. {course.title} - {len(course.students)} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")

    def _demonstrate_logging_notifications(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
        logger.info("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        print("\n5. –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ò –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø")
        print("-" * 40)

        set_current_user(self.instructor_user)
        courses = self.platform.get_courses()

        if courses:
            course = courses[0]

            # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–∫—Å–∏–Ω–æ–≤ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            print("   üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π:")
            course.log_action("–ù–∞—á–∞–ª–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –º–∏–∫—Å–∏–Ω–æ–≤")
            course.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

            # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–∫—Å–∏–Ω–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            print("   üîî –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º:")
            course.notify_students("–ó–∞–≤—Ç—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ")
            course.notify_students("–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ")

    def _handle_exceptions(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π."""
        logger.info("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π")
        print("\n6. –û–ë–†–ê–ë–û–¢–ö–ê –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô")
        print("-" * 40)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
        print("   ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—Å–∞ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏:")
        try:
            invalid_course = CourseFactory.create_course(
                "programming",
                "Invalid Course",
                date(2024, 12, 31),
                date(2024, 1, 1),
                "John Doe",
                ["student1"],
                ["Topic1"],
                languages=["Python"]
            )
            print("      ‚ùå –ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏)")
        except InvalidDateError as e:
            print(f"      ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {e}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        print("\n   ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–º:")
        set_current_user(self.student_user)
        try:
            courses = self.platform.get_courses()
            if courses:
                courses[0].title = "–ù–µ–¥–æ–∑–≤–æ–ª–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ"
                print("      ‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏)")
        except PermissionDeniedError as e:
            print(f"      ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {e}")

    def _demonstrate_course_comparison(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤."""
        logger.info("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç–æ–¥–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤")
        print("\n7. –°–†–ê–í–ù–ï–ù–ò–ï –ö–£–†–°–û–í")
        print("-" * 40)

        courses = self.platform.get_courses()
        if len(courses) >= 2:
            course1, course2 = courses[0], courses[1]

            print("   üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:")
            print(f"      {course1.title}: {len(course1.students)} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
            print(f"      {course2.title}: {len(course2.students)} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")

            # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            print(f"      –ö—É—Ä—Å 1 == –ö—É—Ä—Å 2: {course1 == course2}")
            print(f"      –ö—É—Ä—Å 1 < –ö—É—Ä—Å 2: {course1 < course2}")
            print(f"      –ö—É—Ä—Å 1 > –ö—É—Ä—Å 2: {course1 > course2}")
            print(f"      –ö—É—Ä—Å 1 <= –ö—É—Ä—Å 2: {course1 <= course2}")
            print(f"      –ö—É—Ä—Å 1 >= –ö—É—Ä—Å 2: {course1 >= course2}")

            print("\n   üìÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
            duration1 = (course1.end_date - course1.start_date).days
            duration2 = (course2.end_date - course2.start_date).days
            print(f"      {course1.title}: {duration1} –¥–Ω–µ–π")
            print(f"      {course2.title}: {duration2} –¥–Ω–µ–π")

            comparison = course1.compare_by_duration(course2)
            if comparison < 0:
                print(f"      {course1.title} –∫–æ—Ä–æ—á–µ —á–µ–º {course2.title}")
            elif comparison > 0:
                print(f"      {course1.title} –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º {course2.title}")
            else:
                print(f"      –ö—É—Ä—Å—ã –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")


def main():
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É.

    –ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —Ä–∞–±–æ—Ç—ã –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
    """
    try:
        demo = EducationalPlatformDemo()
        demo.demonstrate_platform_usage()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()